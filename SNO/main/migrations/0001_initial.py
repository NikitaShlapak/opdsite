# Generated by Django 4.1.4 on 2023-03-07 17:51

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже зарегистрирован'}, max_length=50, unique=True, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),
                ('registration_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('study_group', models.CharField(blank=True, default='Преподаватель', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Некорректное название группы', regex='([а-яА-ЯёЁ]{1,4}\\d?-[1-9а-яА-ЯёЁ]{1,4}\\d?)|Преподаватель')], verbose_name='Группа')),
                ('is_approved', models.BooleanField(default=False)),
                ('is_Free', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_project', models.CharField(max_length=50, verbose_name='Название проекта')),
                ('edition_key', models.PositiveSmallIntegerField(default=11656)),
                ('project_type', models.CharField(choices=[('external', 'Внешний проект'), ('service', 'Сервисный проект'), ('research', 'Исследовательский проект')], max_length=100, verbose_name='Тип проекта')),
                ('target_groups', models.CharField(max_length=100, verbose_name='Целевые группы')),
                ('manager_email', models.EmailField(max_length=254, verbose_name='Email руководителя')),
                ('implementation_period', models.CharField(choices=[('One', 'На один семестр'), ('Two', 'На два семестра'), ('Tree', 'На три семестра'), ('More', 'На большее количество семестров')], max_length=50, verbose_name='Срок реализации')),
                ('project_status', models.CharField(choices=[('opened', 'Набор открыт'), ('closed', 'Набор закрыт'), ('under_review', 'Проект на рассмотрении'), ('rejected', 'Проект отклонён')], default='under_review', max_length=15, verbose_name='Статус проекта')),
                ('short_project_description', models.CharField(max_length=150, verbose_name='Краткое описание проекта')),
                ('long_project_description', models.TextField(verbose_name='Полное описание проекта')),
                ('poster', models.ImageField(upload_to='uploads/img/%Y/%m/%d/', verbose_name='Постер')),
                ('manager', models.ForeignKey(limit_choices_to={'is_Free': True}, max_length=50, on_delete=django.db.models.deletion.CASCADE, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='Руководитель проекта')),
                ('team', models.ManyToManyField(null=True, to=settings.AUTH_USER_MODEL, verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='ProjectReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(default='', max_length=100, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('file', models.FileField(blank=True, upload_to='uploads/files/%Y/%m/%d/', verbose_name='Прилагаемый файл')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('parent_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Отчёт',
                'verbose_name_plural': 'Отчёты',
            },
        ),
    ]
